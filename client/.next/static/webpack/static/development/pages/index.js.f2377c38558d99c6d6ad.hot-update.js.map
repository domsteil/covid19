{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.f2377c38558d99c6d6ad.hot-update.js","sources":["webpack:///./src/components/cases/CaseForm.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport useFormInput from '../useFormInput';\r\nimport axios from 'axios';\r\nimport Text from 'evergreen-ui/commonjs/typography/src/Text'\r\nimport Button from 'evergreen-ui/commonjs/buttons/src/Button';\r\nimport OrganizationContext from '../OrganizationContext';\r\nimport toaster from 'evergreen-ui/commonjs/toaster/src'\r\nimport querystring from 'querystring';\r\n\r\nexport default function CaseForm(props) {\r\n\r\n    const caseId = useFormInput('');\r\n    const caseNumber = useFormInput('');\r\n    const summary = useFormInput('');\r\n    const location = useFormInput('');\r\n    const country = useFormInput('');\r\n    const latitude = useFormInput('');\r\n    const longitude = useFormInput('');\r\n    const date = useFormInput('');\r\n    const caseName = useFormInput('');\r\n    const caseStatus = useFormInput('');\r\n    const casePriority = useFormInput('');\r\n    const resolver = useFormInput('');\r\n\r\n    let createCase = () => {\r\n  \r\n      let axiosConfig = {\r\n        headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"POST,GET,OPTIONS, PUT, DELETE\"\r\n        }\r\n      };\r\n  \r\n      axios.post(`https://stateset.network/api/stateset/createCase?`, \r\n      querystring.stringify({ \r\n        caseId: caseId, \r\n        caseName: caseName,\r\n        caseNumber: caseNumber,\r\n        summary: summary,\r\n        country: country,\r\n        location: location,\r\n        latitude: latitude,\r\n        longitude: longitude,\r\n        date: date, \r\n        caseStatus: caseStatus,\r\n        casePriority: casePriority, \r\n        resolver: resolver }),  axiosConfig)\r\n      .then(res => {\r\n\r\n        const caseId = res.data.caseId;\r\n  \r\n        toaster.success(\r\n          'Case ' + caseId + ' has been created.')\r\n        })\r\n        .catch(error => {\r\n          toaster.danger(res.data)\r\n      });\r\n    }\r\n\r\nreturn (\r\n    <section>\r\n    <div className=\"row\">\r\n        <div className=\"column\">\r\n        <form onSubmit={createCase}>\r\n        <Text>Case Id</Text>\r\n        <br/>\r\n        <input className=\"case\" {...caseId} />\r\n        <br/>\r\n        <Text>Case Name</Text>\r\n        <br/>\r\n        <input className=\"case\" {...caseName} />\r\n        <br/>\r\n        <Text>Description</Text>\r\n        <br/>\r\n        <input className=\"case\" {...summary} />\r\n        <br/>\r\n        <Text>Country</Text>\r\n        <br/>\r\n        <input className=\"case\" {...country} />\r\n        <br/>\r\n        <Text>Latitude</Text>\r\n        <br/>\r\n        <input className=\"case\" {...latitude} />\r\n        <br/>\r\n        <Text>Longitude</Text>\r\n        <br/>\r\n        <input className=\"case\" {...longitude} />\r\n        <br/>\r\n        <Text>Date</Text>\r\n        <br/>\r\n        <input className=\"case\" {...date} />\r\n        <br/>\r\n        <Text>Case Id</Text>\r\n        <br/>\r\n        <input className=\"case\" {...caseNumber} />\r\n        <br/>\r\n        <Text>Case Id</Text>\r\n        <br/>\r\n        <input className=\"case\" {...caseStatus} />\r\n        <br/>\r\n        <input className=\"case\" {...casePriority} />\r\n        <br/>\r\n        <input className=\"case\" {...resolver} />\r\n        <br/>\r\n        <br/>\r\n        <Button type=\"submit\" invert>Submit New Case</Button>\r\n        <br/>\r\n        </form>\r\n        </div>\r\n        \r\n    </div>\r\n        <style jsx>{`\r\n      .column {\r\n        text-align: left;\r\n        border-width: 1px;\r\n        list-style: none;\r\n        padding-bottom: 8px;\r\n        padding-top: 8px;\r\n        margin-right: 28px;\r\n      }\r\n\r\n      .button {\r\n        -webkit-appearance: none;\r\n        position: relative;\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n        text-transform: uppercase;\r\n        text-align: center;\r\n        line-height: 0;\r\n        white-space: nowrap;\r\n        width: 120px;\r\n        height: 30px;\r\n        margin-left: 8px;\r\n        font-weight: 500;\r\n        font-size: 12px;\r\n        color: rgb(102, 102, 102);\r\n        background-color: rgb(255, 255, 255);\r\n        user-select: none;\r\n        cursor: pointer;\r\n        text-decoration: none;\r\n        padding: 0px 10px;\r\n        margin-bottom: 2px;\r\n        border-radius: 5px;\r\n        border-width: 1px;\r\n        border-style: solid;\r\n        border-color: rgb(234, 234, 234);\r\n        border-image: initial;\r\n        transition: all 0.2s ease 0s;\r\n        overflow: hidden;\r\n        outline: none;\r\n      }\r\n\r\n      .login {\r\n        color: #FFF;\r\n      }\r\n\r\n      h2 {\r\n        font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;\r\n        margin: 10px 0;\r\n        font-size: 24px;\r\n        font-weight: normal;\r\n        margin-right: 30px;\r\n        padding-left: 5px;\r\n        color: #FFF;\r\n        text-align: center;\r\n      }\r\n\r\n      h3 {\r\n        font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;\r\n        margin: 10px 0;\r\n        font-size: 17px;\r\n        font-weight: normal;\r\n        margin-right: 30px;\r\n        padding-left: 5px;\r\n        color: #FFF;\r\n        text-align: center;\r\n      }\r\n\r\n\r\n      .case {\r\n        font-size: 13px;\r\n        line-height: 1.91667;\r\n        font-weight: 400;\r\n        color: #3d464d;\r\n        border: 1px solid #bdc4c9;\r\n        padding: 3.5px 7px;\r\n        border-radius: 4px;\r\n        margin-top: 28px;\r\n        margin-left: 8px;\r\n      }\r\n\r\n      .row {\r\n        flex-direction: column;\r\n        margin: -1.5rem 0;\r\n        text-align: center;\r\n      }\r\n\r\n      // CSS only media query for tablet\r\n      @media screen and (max-width: 960px) {\r\n        .row {\r\n          flex-direction: column;\r\n          margin: -1.5rem 0;\r\n        }\r\n        .column {\r\n          width: 100%;\r\n          padding: 1.5rem 0;\r\n          text-align: center;\r\n          max-width: 330px;\r\n        }\r\n\r\n        h2 {\r\n            font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;\r\n            margin: 10px 0;\r\n            font-size: 24px;\r\n            font-weight: normal;\r\n            margin-right: 30px;\r\n            padding-left: 5px;\r\n            color: #FFF;\r\n            text-align: center;\r\n          }\r\n\r\n        \r\n      }\r\n    `}</style>\r\n    </section>\r\n  );\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AADA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAesKA;;;;A","sourceRoot":""}