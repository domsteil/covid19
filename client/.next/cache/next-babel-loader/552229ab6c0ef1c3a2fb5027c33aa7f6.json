{"ast":null,"code":"var _jsxFileName = \"C:\\\\covid19\\\\client\\\\src\\\\components\\\\Session\\\\withAuthentication.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firebase } from '../firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    componentDidMount() {\n      const {\n        onSetAuthUser\n      } = this.props;\n      firebase.auth.onAuthStateChanged(authUser => {\n        authUser ? onSetAuthUser(authUser) : onSetAuthUser(null);\n      });\n    }\n\n    render() {\n      return __jsx(Component, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }));\n    }\n\n  }\n\n  const mapDispatchToProps = dispatch => ({\n    onSetAuthUser: authUser => dispatch({\n      type: 'AUTH_USER_SET',\n      authUser\n    })\n  });\n\n  return connect(null, mapDispatchToProps)(WithAuthentication);\n};\n\nexport default withAuthentication;","map":{"version":3,"sources":["C:/covid19/client/src/components/Session/withAuthentication.js"],"names":["React","connect","firebase","withAuthentication","Component","WithAuthentication","componentDidMount","onSetAuthUser","props","auth","onAuthStateChanged","authUser","render","mapDispatchToProps","dispatch","type"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,MAAMC,kBAAkB,GAAIC,SAAD,IAAe;AACxC,QAAMC,kBAAN,SAAiCL,KAAK,CAACI,SAAvC,CAAiD;AAC/CE,IAAAA,iBAAiB,GAAG;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAoB,KAAKC,KAA/B;AAEAN,MAAAA,QAAQ,CAACO,IAAT,CAAcC,kBAAd,CAAiCC,QAAQ,IAAI;AAC3CA,QAAAA,QAAQ,GACJJ,aAAa,CAACI,QAAD,CADT,GAEJJ,aAAa,CAAC,IAAD,CAFjB;AAGD,OAJD;AAKD;;AAEDK,IAAAA,MAAM,GAAG;AACP,aACE,MAAC,SAAD,eAAgB,KAAKJ,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAGD;;AAf8C;;AAkBjD,QAAMK,kBAAkB,GAAIC,QAAD,KAAe;AACxCP,IAAAA,aAAa,EAAGI,QAAD,IAAcG,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,eAAR;AAAyBJ,MAAAA;AAAzB,KAAD;AADG,GAAf,CAA3B;;AAIA,SAAOV,OAAO,CAAC,IAAD,EAAOY,kBAAP,CAAP,CAAkCR,kBAAlC,CAAP;AACD,CAxBD;;AA0BA,eAAeF,kBAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { firebase } from '../firebase';\r\n\r\nconst withAuthentication = (Component) => {\r\n  class WithAuthentication extends React.Component {\r\n    componentDidMount() {\r\n      const { onSetAuthUser } = this.props;\r\n\r\n      firebase.auth.onAuthStateChanged(authUser => {\r\n        authUser\r\n          ? onSetAuthUser(authUser)\r\n          : onSetAuthUser(null);\r\n      });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <Component { ...this.props } />\r\n      );\r\n    }\r\n  }\r\n\r\n  const mapDispatchToProps = (dispatch) => ({\r\n    onSetAuthUser: (authUser) => dispatch({ type: 'AUTH_USER_SET', authUser }),\r\n  });\r\n\r\n  return connect(null, mapDispatchToProps)(WithAuthentication);\r\n}\r\n\r\nexport default withAuthentication;\r\n"]},"metadata":{},"sourceType":"module"}