{"ast":null,"code":"var _jsxFileName = \"C:\\\\covid19\\\\client\\\\src\\\\components\\\\cases\\\\EscalateCase.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport OrganizationContext from '../OrganizationContext';\nimport Component from \"@reach/component-component\";\nimport Dialog from 'evergreen-ui/commonjs/dialog/src/Dialog';\nimport Pane from 'evergreen-ui/commonjs/layers/src/Pane';\nimport Popover from 'evergreen-ui/commonjs/popover/src/Popover';\nimport Button from 'evergreen-ui/commonjs/buttons/src/Button';\nimport Heading from 'evergreen-ui/commonjs/typography/src/Heading';\nimport TextInput from 'evergreen-ui/commonjs/text-input/src/TextInput';\nimport axios from 'axios';\nimport querystring from 'querystring';\nexport default function EscalateCase(props) {\n  const {\n    nodeName\n  } = useContext(OrganizationContext);\n  const {\n    0: caseNumber,\n    1: setCaseNumber\n  } = useState('');\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n\n  let escalateCase = () => {\n    let axiosConfig = {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"POST,GET,OPTIONS, PUT, DELETE\"\n      }\n    };\n    axios.post(`https://dapps.ngrok.io/api/` + nodeName + `/escalateCase?` + `caseNumber=` + caseNumber, querystring.stringify({\n      caseNumber: caseNumber\n    }), axiosConfig).then(res => {\n      const caseData = res.data;\n      setMessage('Case' + caseNumber + 'has been escalated.'); // toast\n\n      console.log(res.data);\n    });\n  };\n\n  return __jsx(Component, {\n    initialState: {\n      isShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }\n  }, ({\n    state,\n    setState\n  }) => __jsx(Pane, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Dialog, {\n    isShown: state.isShown,\n    onCloseComplete: escalateCase,\n    title: \"Escalate Case\",\n    hasHeader: false,\n    confirmLabel: \"Escalate Case\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Escalate the Case\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), __jsx(TextInput, {\n    name: caseNumber,\n    type: \"text\",\n    placeholder: \"Case Number\",\n    onChange: e => setCaseNumber(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), __jsx(Button, {\n    marginRight: 16,\n    onClick: () => setState({\n      isShown: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Escalate\"), \" \", message));\n}\n;","map":{"version":3,"sources":["C:/covid19/client/src/components/cases/EscalateCase.js"],"names":["React","useEffect","useState","useContext","OrganizationContext","Component","Dialog","Pane","Popover","Button","Heading","TextInput","axios","querystring","EscalateCase","props","nodeName","caseNumber","setCaseNumber","message","setMessage","escalateCase","axiosConfig","headers","post","stringify","then","res","caseData","data","console","log","isShown","state","setState","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,OAAOC,IAAP,MAAiB,uCAAjB;AACA,OAAOC,OAAP,MAAoB,2CAApB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,OAAOC,OAAP,MAAoB,8CAApB;AACA,OAAOC,SAAP,MAAsB,gDAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAGA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAE5C,QAAM;AAAEC,IAAAA;AAAF,MAAeb,UAAU,CAACC,mBAAD,CAA/B;AACA,QAAM;AAAA,OAACa,UAAD;AAAA,OAAaC;AAAb,MAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAACiB,OAAD;AAAA,OAAUC;AAAV,MAAwBlB,QAAQ,CAAC,EAAD,CAAtC;;AAEA,MAAImB,YAAY,GAAG,MAAM;AAErB,QAAIC,WAAW,GAAG;AAChBC,MAAAA,OAAO,EAAE;AACL,uCAA+B,GAD1B;AAEL,wCAAgC;AAF3B;AADO,KAAlB;AAOAX,IAAAA,KAAK,CAACY,IAAN,CAAY,6BAAD,GAAgCR,QAAhC,GAA4C,gBAA5C,GAA+D,aAA/D,GAA8EC,UAAzF,EAAqGJ,WAAW,CAACY,SAAZ,CAAsB;AAAER,MAAAA,UAAU,EAAEA;AAAd,KAAtB,CAArG,EAAwJK,WAAxJ,EACCI,IADD,CACMC,GAAG,IAAI;AAEX,YAAMC,QAAQ,GAAGD,GAAG,CAACE,IAArB;AACAT,MAAAA,UAAU,CAAC,SAASH,UAAT,GAAsB,qBAAvB,CAAV,CAHW,CAG8C;;AACzDa,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,IAAhB;AACD,KAND;AAOD,GAhBH;;AAkBE,SAEA,MAAC,SAAD;AAAW,IAAA,YAAY,EAAE;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAED,KAAK,CAACD,OADjB;AAEE,IAAA,eAAe,EAAEX,YAFnB;AAGE,IAAA,KAAK,EAAC,eAHR;AAIE,IAAA,SAAS,EAAE,KAJb;AAKE,IAAA,YAAY,EAAC,eALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,MAAC,SAAD;AACE,IAAA,IAAI,EAAEJ,UADR;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,aAHd;AAIE,IAAA,QAAQ,EAAEkB,CAAC,IAAIjB,aAAa,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF,EAoBE,MAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,EAArB;AAAyB,IAAA,OAAO,EAAE,MAAMH,QAAQ,CAAC;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF,OAoB0Fb,OApB1F,CAFF,CAFA;AA6BD;AAAA","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport OrganizationContext from '../OrganizationContext';\r\nimport Component from \"@reach/component-component\";\r\nimport Dialog from 'evergreen-ui/commonjs/dialog/src/Dialog';\r\nimport Pane from 'evergreen-ui/commonjs/layers/src/Pane'\r\nimport Popover from 'evergreen-ui/commonjs/popover/src/Popover';\r\nimport Button from 'evergreen-ui/commonjs/buttons/src/Button'\r\nimport Heading from 'evergreen-ui/commonjs/typography/src/Heading'\r\nimport TextInput from 'evergreen-ui/commonjs/text-input/src/TextInput'\r\nimport axios from 'axios';\r\nimport querystring from 'querystring';\r\n\r\n\r\nexport default function EscalateCase(props) {\r\n\r\nconst { nodeName } = useContext(OrganizationContext);\r\nconst [caseNumber, setCaseNumber] = useState('');\r\nconst [message, setMessage] = useState('');\r\n\r\nlet escalateCase = () => {\r\n  \r\n    let axiosConfig = {\r\n      headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Access-Control-Allow-Methods\": \"POST,GET,OPTIONS, PUT, DELETE\"\r\n      }\r\n    };\r\n  \r\n    axios.post(`https://dapps.ngrok.io/api/` + nodeName + `/escalateCase?` + `caseNumber=` + caseNumber, querystring.stringify({ caseNumber: caseNumber}),  axiosConfig)\r\n    .then(res => {\r\n  \r\n      const caseData = res.data;\r\n      setMessage('Case' + caseNumber + 'has been escalated.'); // toast\r\n      console.log(res.data);\r\n    })\r\n  }\r\n\r\n  return (\r\n\r\n  <Component initialState={{ isShown: false }}>\r\n  {({ state, setState }) => (\r\n    <Pane>\r\n      <Dialog\r\n        isShown={state.isShown}\r\n        onCloseComplete={escalateCase}\r\n        title=\"Escalate Case\"\r\n        hasHeader={false}\r\n        confirmLabel=\"Escalate Case\"\r\n      >\r\n        Escalate the Case\r\n        <br/>\r\n        <br/>\r\n        <TextInput\r\n          name={caseNumber}\r\n          type=\"text\"\r\n          placeholder=\"Case Number\"\r\n          onChange={e => setCaseNumber(e.target.value)}\r\n        />\r\n        <br/>\r\n      </Dialog>\r\n\r\n      <Button marginRight={16} onClick={() => setState({ isShown: true })}>Escalate</Button> {message}\r\n    </Pane>\r\n  )}\r\n</Component>\r\n  )\r\n};"]},"metadata":{},"sourceType":"module"}