{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\covid19\\\\client\\\\src\\\\components\\\\cases\\\\ExportCases.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport TextInput from 'evergreen-ui/commonjs/text-input/src/TextInput';\nimport Button from 'evergreen-ui/commonjs/buttons/src/Button';\nimport SideSheet from 'evergreen-ui/commonjs/side-sheet/src/SideSheet';\nimport Paragraph from 'evergreen-ui/commonjs/typography/src/Paragraph';\nimport Card from 'evergreen-ui/commonjs/layers/src/Card';\nimport Heading from 'evergreen-ui/commonjs/typography/src/Heading';\nimport Pane from 'evergreen-ui/commonjs/layers/src/Pane';\nimport IconButton from 'evergreen-ui/commonjs/buttons/src/IconButton';\nimport Textarea from 'evergreen-ui/commonjs/textarea/src/Textarea';\nimport Tablist from 'evergreen-ui/commonjs/tabs/src/Tablist';\nimport Tab from 'evergreen-ui/commonjs/tabs/src/Tab';\nimport Component from '@reach/component-component';\nimport CornerDialog from 'evergreen-ui/commonjs/corner-dialog/src/CornerDialog';\nimport toaster from 'evergreen-ui/commonjs/toaster/src';\nimport OrganizationContext from '../OrganizationContext';\nexport default (function () {\n  var _useState = useState({\n    submitted: false,\n    submitting: false,\n    info: {\n      error: false,\n      msg: null\n    }\n  }),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var _useState2 = useState({\n    email: '',\n    message: ''\n  }),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var handleResponse = function handleResponse(status, msg) {\n    if (status === 200) {\n      setStatus({\n        submitted: true,\n        submitting: false,\n        info: {\n          error: false,\n          msg: msg\n        }\n      });\n      setInputs({\n        email: '',\n        message: ''\n      });\n    } else {\n      setStatus({\n        info: {\n          error: true,\n          msg: msg\n        }\n      });\n    }\n  };\n\n  var handleOnChange = function handleOnChange(e) {\n    e.persist();\n    setInputs(function (prev) {\n      return _objectSpread({}, prev, _defineProperty({}, e.target.id, e.target.value));\n    });\n    setStatus({\n      submitted: false,\n      submitting: false,\n      info: {\n        error: false,\n        msg: null\n      }\n    });\n  };\n\n  var handleOnSubmit = function handleOnSubmit(e) {\n    var res;\n    return _regeneratorRuntime.async(function handleOnSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setStatus(function (prevStatus) {\n              return _objectSpread({}, prevStatus, {\n                submitting: true\n              });\n            });\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('/api/exportCases', {\n              method: 'GET',\n              headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Methods\": \"POST,GET,OPTIONS, PUT, DELETE\",\n                \"Accept-Encoding\": \"gzip, deflate\",\n                // \"Authorization\": \"01-448dbac9-8c42df723645738886cdb3ce06f89e7af1d66517\",\n                \"Content-Type\": \"application/json\"\n              }\n            }));\n\n          case 3:\n            res = _context.sent;\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, __jsx(Component, {\n    initialState: {\n      isShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, function (_ref) {\n    var state = _ref.state,\n        setState = _ref.setState;\n    return __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, __jsx(CornerDialog, {\n      title: \"Export Cases\",\n      isShown: state.isShown,\n      confirmLabel: \"Export\",\n      onCancel: function onCancel() {\n        return setState({\n          isShown: false\n        });\n      },\n      onCloseComplete: handleOnSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, status.info.error && __jsx(\"div\", {\n      className: \"error\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"Error: \", status.info.msg), !status.info.error && status.info.msg && __jsx(\"div\", {\n      className: \"success\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, status.info.msg)), __jsx(Button, {\n      marginBottom: 17,\n      iconBefore: \"feed\",\n      onClick: function onClick() {\n        return setState({\n          isShown: true\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, \"Export Cases\"));\n  }));\n});","map":{"version":3,"sources":["C:/covid19/client/src/components/cases/ExportCases.js"],"names":["React","useState","useContext","TextInput","Button","SideSheet","Paragraph","Card","Heading","Pane","IconButton","Textarea","Tablist","Tab","Component","CornerDialog","toaster","OrganizationContext","submitted","submitting","info","error","msg","status","setStatus","email","message","inputs","setInputs","handleResponse","handleOnChange","e","persist","prev","target","id","value","handleOnSubmit","prevStatus","fetch","method","headers","res","isShown","state","setState"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport TextInput from 'evergreen-ui/commonjs/text-input/src/TextInput';\r\nimport Button from 'evergreen-ui/commonjs/buttons/src/Button';\r\nimport SideSheet from 'evergreen-ui/commonjs/side-sheet/src/SideSheet'\r\nimport Paragraph from 'evergreen-ui/commonjs/typography/src/Paragraph'\r\nimport Card from 'evergreen-ui/commonjs/layers/src/Card'\r\nimport Heading from 'evergreen-ui/commonjs/typography/src/Heading'\r\nimport Pane from 'evergreen-ui/commonjs/layers/src/Pane'\r\nimport IconButton from 'evergreen-ui/commonjs/buttons/src/IconButton'\r\nimport Textarea from 'evergreen-ui/commonjs/textarea/src/Textarea';\r\nimport Tablist from 'evergreen-ui/commonjs/tabs/src/Tablist'\r\nimport Tab from 'evergreen-ui/commonjs/tabs/src/Tab'\r\nimport Component from '@reach/component-component';\r\nimport CornerDialog from 'evergreen-ui/commonjs/corner-dialog/src/CornerDialog'\r\nimport toaster from 'evergreen-ui/commonjs/toaster/src'\r\nimport OrganizationContext from '../OrganizationContext';\r\n\r\nexport default () => {\r\n  const [status, setStatus] = useState({\r\n    submitted: false,\r\n    submitting: false,\r\n    info: { error: false, msg: null }\r\n  })\r\n\r\n  const [inputs, setInputs] = useState({\r\n    email: '',\r\n    message: ''\r\n  })\r\n\r\n  const handleResponse = (status, msg) => {\r\n    if (status === 200) {\r\n      setStatus({\r\n        submitted: true,\r\n        submitting: false,\r\n        info: { error: false, msg: msg }\r\n      })\r\n      setInputs({\r\n        email: '',\r\n        message: ''\r\n      })\r\n    } else {\r\n      setStatus({\r\n        info: { error: true, msg: msg }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleOnChange = e => {\r\n    e.persist()\r\n    setInputs(prev => ({\r\n      ...prev,\r\n      [e.target.id]: e.target.value\r\n    }))\r\n    setStatus({\r\n      submitted: false,\r\n      submitting: false,\r\n      info: { error: false, msg: null }\r\n    })\r\n  }\r\n\r\n  const handleOnSubmit = async e => {\r\n    setStatus(prevStatus => ({ ...prevStatus, submitting: true }))\r\n    const res = await fetch('/api/exportCases', {\r\n      method: 'GET',\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Access-Control-Allow-Methods\": \"POST,GET,OPTIONS, PUT, DELETE\",\r\n        \"Accept-Encoding\": \"gzip, deflate\",\r\n        // \"Authorization\": \"01-448dbac9-8c42df723645738886cdb3ce06f89e7af1d66517\",\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <main>\r\n        <Component initialState={{ isShown: false }}>\r\n            {({ state, setState }) => (\r\n    <React.Fragment>\r\n      <CornerDialog\r\n        title=\"Export Cases\"\r\n        isShown={state.isShown}\r\n        confirmLabel=\"Export\"\r\n        onCancel={() => setState({ isShown: false })}\r\n        onCloseComplete={handleOnSubmit}\r\n      >\r\n      {status.info.error && (\r\n        <div className=\"error\">Error: {status.info.msg}</div>\r\n      )}\r\n      {!status.info.error && status.info.msg && (\r\n        <div className=\"success\">{status.info.msg}</div>\r\n      )}\r\n      </CornerDialog>\r\n      <Button marginBottom={17} iconBefore=\"feed\" onClick={() => setState({ isShown: true })}>\r\n        Export Cases\r\n      </Button>\r\n    </React.Fragment>\r\n  )}\r\n</Component>\r\n    </main>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}