{"ast":null,"code":"var _jsxFileName = \"C:\\\\covid19\\\\client\\\\src\\\\components\\\\media-query.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nconst {\n  Provider: MediaQueryProvider,\n  Consumer: MediaQueryConsumer\n} = React.createContext({\n  isMobile: false,\n  isTablet: false\n});\n\nconst withMediaQuery = Comp => {\n  var _temp;\n\n  return _temp = class extends PureComponent {\n    constructor(...args) {\n      super(...args);\n\n      _defineProperty(this, \"state\", {\n        isMobile: false,\n        isTablet: false\n      });\n\n      _defineProperty(this, \"onResize\", () => {\n        const isMobile = window.innerWidth < 640;\n        const isTablet = window.innerWidth < 960;\n\n        if (isMobile !== this.state.isMobile) {\n          this.setState({\n            isMobile\n          });\n        }\n\n        if (isTablet !== this.state.isTablet) {\n          this.setState({\n            isTablet\n          });\n        }\n      });\n    }\n\n    componentDidMount() {\n      window.addEventListener('resize', this.onResize);\n      this.onResize();\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('resize', this.onResize);\n    }\n\n    render() {\n      const {\n        isMobile,\n        isTablet\n      } = this.state;\n      return __jsx(MediaQueryProvider, {\n        value: {\n          isMobile,\n          isTablet\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, __jsx(Comp, _extends({\n        isMobile: isMobile,\n        isTablet: isTablet\n      }, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      })));\n    }\n\n  }, _temp;\n};\n\nexport { MediaQueryProvider, MediaQueryConsumer, withMediaQuery };","map":{"version":3,"sources":["C:/covid19/client/src/components/media-query.js"],"names":["React","PureComponent","Provider","MediaQueryProvider","Consumer","MediaQueryConsumer","createContext","isMobile","isTablet","withMediaQuery","Comp","window","innerWidth","state","setState","componentDidMount","addEventListener","onResize","componentWillUnmount","removeEventListener","render","props"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,MAAM;AACJC,EAAAA,QAAQ,EAAEC,kBADN;AAEJC,EAAAA,QAAQ,EAAEC;AAFN,IAGFL,KAAK,CAACM,aAAN,CAAoB;AACtBC,EAAAA,QAAQ,EAAE,KADY;AAEtBC,EAAAA,QAAQ,EAAE;AAFY,CAApB,CAHJ;;AAQA,MAAMC,cAAc,GAAGC,IAAI;AAAA;;AAAA,iBACzB,cAAcT,aAAd,CAA4B;AAAA;AAAA;;AAAA,qCAClB;AACNM,QAAAA,QAAQ,EAAE,KADJ;AAENC,QAAAA,QAAQ,EAAE;AAFJ,OADkB;;AAAA,wCAMf,MAAM;AACf,cAAMD,QAAQ,GAAGI,MAAM,CAACC,UAAP,GAAoB,GAArC;AACA,cAAMJ,QAAQ,GAAGG,MAAM,CAACC,UAAP,GAAoB,GAArC;;AACA,YAAIL,QAAQ,KAAK,KAAKM,KAAL,CAAWN,QAA5B,EAAsC;AACpC,eAAKO,QAAL,CAAc;AAAEP,YAAAA;AAAF,WAAd;AACD;;AACD,YAAIC,QAAQ,KAAK,KAAKK,KAAL,CAAWL,QAA5B,EAAsC;AACpC,eAAKM,QAAL,CAAc;AAAEN,YAAAA;AAAF,WAAd;AACD;AACF,OAfyB;AAAA;;AAiB1BO,IAAAA,iBAAiB,GAAG;AAClBJ,MAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,QAAvC;AACA,WAAKA,QAAL;AACD;;AAEDC,IAAAA,oBAAoB,GAAG;AACrBP,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqC,KAAKF,QAA1C;AACD;;AAEDG,IAAAA,MAAM,GAAG;AACP,YAAM;AAAEb,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAyB,KAAKK,KAApC;AAEA,aACE,MAAC,kBAAD;AAAoB,QAAA,KAAK,EAAE;AAAEN,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAED,QAAhB;AAA0B,QAAA,QAAQ,EAAEC;AAApC,SAAkD,KAAKa,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAKD;;AAlCyB,GADH;AAAA,CAA3B;;AAsCA,SAASlB,kBAAT,EAA6BE,kBAA7B,EAAiDI,cAAjD","sourcesContent":["import React, { PureComponent } from 'react';\r\n\r\nconst {\r\n  Provider: MediaQueryProvider,\r\n  Consumer: MediaQueryConsumer\r\n} = React.createContext({\r\n  isMobile: false,\r\n  isTablet: false\r\n});\r\n\r\nconst withMediaQuery = Comp =>\r\n  class extends PureComponent {\r\n    state = {\r\n      isMobile: false,\r\n      isTablet: false\r\n    };\r\n\r\n    onResize = () => {\r\n      const isMobile = window.innerWidth < 640;\r\n      const isTablet = window.innerWidth < 960;\r\n      if (isMobile !== this.state.isMobile) {\r\n        this.setState({ isMobile });\r\n      }\r\n      if (isTablet !== this.state.isTablet) {\r\n        this.setState({ isTablet });\r\n      }\r\n    };\r\n\r\n    componentDidMount() {\r\n      window.addEventListener('resize', this.onResize);\r\n      this.onResize();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      window.removeEventListener('resize', this.onResize);\r\n    }\r\n\r\n    render() {\r\n      const { isMobile, isTablet } = this.state;\r\n\r\n      return (\r\n        <MediaQueryProvider value={{ isMobile, isTablet }}>\r\n          <Comp isMobile={isMobile} isTablet={isTablet} {...this.props} />\r\n        </MediaQueryProvider>\r\n      );\r\n    }\r\n  };\r\n\r\nexport { MediaQueryProvider, MediaQueryConsumer, withMediaQuery };"]},"metadata":{},"sourceType":"module"}