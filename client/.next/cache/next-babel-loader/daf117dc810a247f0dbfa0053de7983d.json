{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from \"react\";\nexport default function useFetch(url) {\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  function getData() {\n    var response, data;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(url));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            data = _context.sent;\n            setData(data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return data;\n}","map":{"version":3,"sources":["C:/covid19/client/src/components/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","getData","fetch","response","json"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA,kBACZH,QAAQ,CAAC,EAAD,CADI;AAAA,MAC7BI,IAD6B;AAAA,MACvBC,OADuB;;AAGpC,WAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACyBC,KAAK,CAACJ,GAAD,CAD9B;;AAAA;AACQK,YAAAA,QADR;AAAA;AAAA,6CAEqBA,QAAQ,CAACC,IAAT,EAFrB;;AAAA;AAEQL,YAAAA,IAFR;AAGEC,YAAAA,OAAO,CAACD,IAAD,CAAP;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMAH,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOF,IAAP;AACD","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default function useFetch(url) {\r\n  const [data, setData] = useState([]);\r\n  \r\n  async function getData() {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    setData(data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  \r\n  return data;\r\n}"]},"metadata":{},"sourceType":"module"}