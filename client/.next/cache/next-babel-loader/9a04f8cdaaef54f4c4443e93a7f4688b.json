{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\covid19\\\\client\\\\src\\\\components\\\\charts\\\\CasePieChart.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsExporting from 'highcharts/modules/exporting';\nimport HighchartsReact from 'highcharts-react-official';\nimport gql from 'graphql-tag';\nimport { Query } from \"react-apollo\";\nimport { Pane } from 'evergreen-ui/commonjs/layers';\nimport { Spinner } from 'evergreen-ui';\n\nif (typeof Highcharts === 'object') {\n  HighchartsExporting(Highcharts);\n}\n\nvar CasePieChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(CasePieChart, _React$Component);\n\n  var _super = _createSuper(CasePieChart);\n\n  function CasePieChart(props) {\n    var _this;\n\n    _classCallCheck(this, CasePieChart);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      filter: \"all\",\n      clearInProgress: false,\n      chartOptions: {\n        chart: {\n          plotBackgroundColor: null,\n          plotBorderWidth: null,\n          plotShadow: false,\n          type: 'pie'\n        },\n        title: {\n          text: 'Case Segments'\n        },\n        tooltip: {\n          pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n        },\n        plotOptions: {\n          pie: {\n            allowPointSelect: true,\n            cursor: 'pointer',\n            dataLabels: {\n              enabled: true,\n              format: '<b>{point.name}</b><br>{point.percentage:.1f} %',\n              distance: -50,\n              filter: {\n                property: 'percentage',\n                operator: '>',\n                value: 4\n              }\n            }\n          }\n        },\n        series: [{\n          name: 'Accounts',\n          colorByPoint: true\n        }]\n      }\n    };\n    _this.filterResults = _this.filterResults.bind(_assertThisInitialized(_this));\n    _this.clearCompleted = _this.clearCompleted.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CasePieChart, [{\n    key: \"filterResults\",\n    value: function filterResults(filter) {\n      this.setState(_objectSpread({}, this.state, {\n        filter: filter\n      }));\n    }\n  }, {\n    key: \"clearCompleted\",\n    value: function clearCompleted() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var chartOptions = this.state.chartOptions;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 12\n        }\n      }, __jsx(HighchartsReact, {\n        highcharts: Highcharts,\n        options: chartOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return CasePieChart;\n}(React.Component);\n\nexport default CasePieChart;","map":{"version":3,"sources":["C:/covid19/client/src/components/charts/CasePieChart.js"],"names":["React","Highcharts","HighchartsExporting","HighchartsReact","gql","Query","Pane","Spinner","CasePieChart","props","state","filter","clearInProgress","chartOptions","chart","plotBackgroundColor","plotBorderWidth","plotShadow","type","title","text","tooltip","pointFormat","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","format","distance","property","operator","value","series","name","colorByPoint","filterResults","bind","clearCompleted","setState","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,IAAT,QAAqB,8BAArB;AACA,SAASC,OAAT,QAAwB,cAAxB;;AAEA,IAAI,OAAON,UAAP,KAAsB,QAA1B,EAAoC;AAChCC,EAAAA,mBAAmB,CAACD,UAAD,CAAnB;AACH;;IAEKO,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,eAAe,EAAE,KAFN;AAGXC,MAAAA,YAAY,EAAE;AACZC,QAAAA,KAAK,EAAE;AACHC,UAAAA,mBAAmB,EAAE,IADlB;AAEHC,UAAAA,eAAe,EAAE,IAFd;AAGHC,UAAAA,UAAU,EAAE,KAHT;AAIHC,UAAAA,IAAI,EAAE;AAJH,SADK;AAOVC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE;AADD,SAPG;AAUVC,QAAAA,OAAO,EAAE;AACPC,UAAAA,WAAW,EAAE;AADN,SAVC;AAaVC,QAAAA,WAAW,EAAE;AACXC,UAAAA,GAAG,EAAE;AACHC,YAAAA,gBAAgB,EAAE,IADf;AAEHC,YAAAA,MAAM,EAAE,SAFL;AAGHC,YAAAA,UAAU,EAAE;AACVC,cAAAA,OAAO,EAAE,IADC;AAEVC,cAAAA,MAAM,EAAE,iDAFE;AAGVC,cAAAA,QAAQ,EAAE,CAAC,EAHD;AAIVnB,cAAAA,MAAM,EAAE;AACNoB,gBAAAA,QAAQ,EAAE,YADJ;AAENC,gBAAAA,QAAQ,EAAE,GAFJ;AAGNC,gBAAAA,KAAK,EAAE;AAHD;AAJE;AAHT;AADM,SAbH;AA6BVC,QAAAA,MAAM,EAAE,CAAC;AACLC,UAAAA,IAAI,EAAE,UADD;AAELC,UAAAA,YAAY,EAAE;AAFT,SAAD;AA7BE;AAHH,KAAb;AAuCA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,+BAAtB;AA1Ce;AA2ChB;;;;kCAEa3B,M,EAAQ;AACpB,WAAK6B,QAAL,mBACK,KAAK9B,KADV;AAEEC,QAAAA,MAAM,EAAEA;AAFV;AAID;;;qCAEc,CAAE;;;6BAET;AAAA,UAEAE,YAFA,GAEiB,KAAKH,KAFtB,CAEAG,YAFA;AAIR,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACP,MAAC,eAAD;AACE,QAAA,UAAU,EAAEZ,UADd;AAEE,QAAA,OAAO,EAAEY,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADO,CAAP;AAMD;;;;EAjEwBb,KAAK,CAACyC,S;;AAoEjC,eAAejC,YAAf","sourcesContent":["import React from 'react';\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsExporting from 'highcharts/modules/exporting'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport gql from 'graphql-tag';\r\nimport { Query } from \"react-apollo\";\r\nimport { Pane } from 'evergreen-ui/commonjs/layers';\r\nimport { Spinner } from 'evergreen-ui';\r\n\r\nif (typeof Highcharts === 'object') {\r\n    HighchartsExporting(Highcharts)\r\n}\r\n\r\nclass CasePieChart extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        filter: \"all\",\r\n        clearInProgress: false,\r\n        chartOptions: {\r\n          chart: {\r\n              plotBackgroundColor: null,\r\n              plotBorderWidth: null,\r\n              plotShadow: false,\r\n              type: 'pie'\r\n            },\r\n            title: {\r\n              text: 'Case Segments'\r\n            },\r\n            tooltip: {\r\n              pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n            },\r\n            plotOptions: {\r\n              pie: {\r\n                allowPointSelect: true,\r\n                cursor: 'pointer',\r\n                dataLabels: {\r\n                  enabled: true,\r\n                  format: '<b>{point.name}</b><br>{point.percentage:.1f} %',\r\n                  distance: -50,\r\n                  filter: {\r\n                    property: 'percentage',\r\n                    operator: '>',\r\n                    value: 4\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            series: [{\r\n                name: 'Accounts',\r\n                colorByPoint: true,\r\n                }]\r\n      }\r\n  };\r\n\r\n      this.filterResults = this.filterResults.bind(this);\r\n      this.clearCompleted = this.clearCompleted.bind(this);\r\n    }\r\n\r\n    filterResults(filter) {\r\n      this.setState({\r\n        ...this.state,\r\n        filter: filter\r\n      });\r\n    }\r\n    \r\n  clearCompleted() {}\r\n\r\n  render () {\r\n    \r\n    const { chartOptions } = this.state;\r\n\r\n    return <div>\r\n    <HighchartsReact\r\n      highcharts={Highcharts}\r\n      options={chartOptions}\r\n    />\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default CasePieChart;"]},"metadata":{},"sourceType":"module"}