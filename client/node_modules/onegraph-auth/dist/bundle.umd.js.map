{"version":3,"file":"bundle.umd.js","sources":["../src/oauthError.js","../src/storage.js","../src/uri.js","../src/auth.js"],"sourcesContent":["type ErrorObject = {\n  error: string,\n  error_description: string,\n};\n\nfunction OAuthError(\n  errorObject: ErrorObject,\n  fileName?: string,\n  lineNumber?: number,\n) {\n  const message = `OAuthError: ${errorObject.error} ${\n    errorObject.error_description\n  }`;\n  const instance = new Error(message, fileName, lineNumber);\n  instance.oauthError = errorObject;\n  Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(instance, OAuthError);\n  }\n  return instance;\n}\n\nOAuthError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: Error,\n    enumerable: false,\n    writable: true,\n    configurable: true,\n  },\n});\n\nif (Object.setPrototypeOf) {\n  Object.setPrototypeOf(OAuthError, Error);\n} else {\n  OAuthError.__proto__ = Error;\n}\n\nexport default OAuthError;\n","//@flow\n\nexport interface Storage {\n  getItem(key: string): ?string;\n  setItem(key: string, value: string): void;\n  removeItem(key: string): void;\n}\n\nexport class InMemoryStorage implements Storage {\n  state: {[key: string]: string} = {};\n  getItem = (key: string): ?string => {\n    return this.state[key];\n  };\n  setItem = (key: string, value: string): void => {\n    this.state[key] = value;\n  };\n  removeItem = (key: string): void => {\n    delete this.state[key];\n  };\n}\n\nconst OG_PREFIX = 'oneGraph:';\n\nexport class LocalStorage implements Storage {\n  getItem(key: string): ?string {\n    return localStorage.getItem(OG_PREFIX + key);\n  }\n  setItem(key: string, value: string): void {\n    return localStorage.setItem(OG_PREFIX + key, value);\n  }\n  removeItem(key: string): void {\n    return localStorage.removeItem(OG_PREFIX + key);\n  }\n}\n\nconst DEBUG_KEY = '__og_debug';\n\nexport function hasLocalStorage() {\n  try {\n    localStorage.setItem(DEBUG_KEY, 'debug');\n    localStorage.removeItem(DEBUG_KEY);\n    return true;\n  } catch (e) {\n    return (\n      // $FlowFixMe\n      e instanceof DOMException &&\n      // everything except Firefox\n      (e.code === 22 ||\n        // Firefox\n        e.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        e.name === 'QuotaExceededError' ||\n        // Firefox\n        e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      localStorage.length !== 0\n    );\n  }\n}\n","// @flow\n\ntype Query = {[param: string]: string};\n\ntype URI = {\n  origin: string,\n  path: string,\n  query: Query,\n};\n\nconst URI_REGEX = new RegExp(\n  [\n    '^(https?://[^:/?#]*(?::[0-9]+)?)', // origin\n    '(/{0,1}[^?#]*)', // path\n    '(\\\\?[^#]*|)', // search\n    '(#.*|)$', // hash\n  ].join(''),\n);\n\nfunction parseQuery(queryString): Query {\n  return queryString.split(/[?&]/).reduce((query, part) => {\n    const [param, value] = part.split('=');\n    if (param != null && value != null) {\n      query[param] = value;\n    }\n    return query;\n  }, {});\n}\n\nfunction parse(uriString: string): URI {\n  const match = uriString.match(URI_REGEX);\n  if (!match) {\n    throw new Error('invalid url ' + uriString);\n  }\n  return {\n    origin: match[1],\n    path: match[2],\n    query: parseQuery(match[3]),\n  };\n}\n\nfunction safeParse(uriString: string): ?URI {\n  try {\n    return parse(uriString);\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction addQueryParams(uri: URI, query: Query): URI {\n  return {\n    ...uri,\n    query: {\n      ...uri.query,\n      ...query,\n    },\n  };\n}\n\nfunction setPath(uri: URI, path: string): URI {\n  return {\n    ...uri,\n    path,\n  };\n}\n\nfunction queryToString(query: Query): string {\n  return Object.keys(query)\n    .map(k => `${k}=${query[k]}`)\n    .join('&');\n}\n\nfunction toString(uri: URI): string {\n  const {origin, path, query} = uri;\n  const queryString = queryToString(query);\n  return origin + path + (queryString ? `?${queryString}` : '');\n}\n\ntype MakeArgs = {origin: string, path: string, query: Query};\n\nfunction make({origin, path, query}: MakeArgs): URI {\n  let uri = parse(origin);\n  uri = setPath(uri, path);\n  uri = addQueryParams(uri, query);\n  return uri;\n}\n\nexport default {\n  parse,\n  safeParse,\n  addQueryParams,\n  setPath,\n  toString,\n  make,\n  queryToString,\n};\n","//@flow\n\nimport OAuthError from './oauthError';\nimport {hasLocalStorage, InMemoryStorage, LocalStorage} from './storage';\nimport URI from './uri';\n// $FlowFixMe\nconst idx = require('idx');\n\nimport type {Storage} from './storage';\n\nexport type Service =\n  | 'box'\n  | 'dribbble'\n  | 'dropbox'\n  | 'eventil'\n  | 'facebook'\n  | 'github'\n  | 'gmail'\n  | 'google'\n  | 'google-calendar'\n  | 'google-compute'\n  | 'google-docs'\n  | 'google-translate'\n  | 'hubspot'\n  | 'intercom'\n  | 'quickbooks'\n  | 'salesforce'\n  | 'slack'\n  | 'spotify'\n  | 'stripe'\n  | 'trello'\n  | 'twilio'\n  | 'twitter'\n  | 'youtube'\n  | 'zeit'\n  | 'zendesk';\n\ntype CommunicationMode = 'post_message' | 'redirect';\n\nexport type Opts = {\n  oneGraphOrigin?: string,\n  appId: string,\n  service: Service,\n  oauthFinishOrigin?: string,\n  oauthFinishPath?: string,\n  saveAuthToStorage?: boolean,\n  storage?: Storage,\n  communicationMode?: CommunicationMode,\n  graphqlUrl?: ?string,\n};\n\nexport type LogoutResult = {\n  result: 'success' | 'failure',\n};\n\ntype Token = {\n  accessToken: string,\n  expireDate: number,\n  refreshToken?: ?string,\n};\n\nexport type ServiceStatus = {\n  isLoggedIn: boolean,\n};\n\nexport type LoggedInServices = {\n  [service: string]: {\n    serviceEnum: string,\n    foreignUserIds: Array<string>,\n  },\n};\n\nexport type ServiceInfo = {\n  service: string,\n  serviceEnum: string,\n  friendlyServiceName: string,\n};\n\nexport type ServicesList = Array<ServiceInfo>;\n\nexport type ServicesStatus = {\n  [service: Service]: ServiceStatus,\n};\n\nexport type AuthResponse = {token: Token};\n\ntype Window = any;\n\ntype StateParam = string;\n\nconst POLL_INTERVAL = 35;\n\nconst ALL_SERVICES = [\n  'box',\n  'dribbble',\n  'dropbox',\n  'eventil',\n  'facebook',\n  'github',\n  'gmail',\n  'google',\n  'google-calendar',\n  'google-compute',\n  'google-docs',\n  'google-translate',\n  'hubspot',\n  'intercom',\n  'quickbooks',\n  'salesforce',\n  'slack',\n  'spotify',\n  'stripe',\n  'trello',\n  'twilio',\n  'twitter',\n  'youtube',\n  'zeit',\n  'zendesk',\n];\n\nfunction friendlyServiceName(service: Service): string {\n  switch (service) {\n    case 'box':\n      return 'Box';\n    case 'dribbble':\n      return 'Dribbble';\n    case 'dropbox':\n      return 'Dropbox';\n    case 'eventil':\n      return 'Eventil';\n    case 'facebook':\n      return 'Facebook';\n    case 'github':\n      return 'GitHub';\n    case 'gmail':\n      return 'Gmail';\n    case 'google':\n      return 'Google';\n    case 'google-calendar':\n      return 'Google Calendar';\n    case 'google-compute':\n      return 'Google Compute';\n    case 'google-docs':\n      return 'Google Docs';\n    case 'google-translate':\n      return 'Google Translate';\n    case 'hubspot':\n      return 'HubSpot';\n    case 'intercom':\n      return 'Intercom';\n    case 'quickbooks':\n      return 'Quickbooks';\n    case 'salesforce':\n      return 'Salesforce';\n    case 'slack':\n      return 'Slack';\n    case 'spotify':\n      return 'Spotify';\n    case 'stripe':\n      return 'Stripe';\n    case 'trello':\n      return 'Trello';\n    case 'twilio':\n      return 'Twilio';\n    case 'twitter':\n      return 'Twitter';\n    case 'youtube':\n      return 'YouTube';\n    case 'zeit':\n      return 'Zeit';\n    case 'zendesk':\n      return 'Zendesk';\n    default:\n      (service: empty); // exhaustive switch check from flow\n      return service;\n  }\n}\n\nfunction getWindowOpts(): Object {\n  const windowWidth = Math.min(800, Math.floor(window.outerWidth * 0.8));\n  const windowHeight = Math.min(630, Math.floor(window.outerHeight * 0.5));\n  const windowArea = {\n    width: windowWidth,\n    height: windowHeight,\n    left: Math.round(window.screenX + (window.outerWidth - windowWidth) / 2),\n    top: Math.round(window.screenY + (window.outerHeight - windowHeight) / 8),\n  };\n\n  // TODO: figure out how to show the toolbar icons in the window for password managers\n  return {\n    width: windowArea.width,\n    height: windowArea.height,\n    left: windowArea.left,\n    top: windowArea.top,\n    toolbar: 0,\n    scrollbars: 1,\n    status: 1,\n    resizable: 1,\n    menuBar: 0,\n  };\n}\n\nfunction createAuthWindow(\n  authUrlString: string,\n  service: Service,\n  stateParam: StateParam,\n  scopes: ?Array<string>,\n): Window {\n  const windowOpts = getWindowOpts();\n  const authUrl = URI.addQueryParams(URI.parse(authUrlString), {\n    state: stateParam,\n    ...(scopes ? {scopes: scopes.join(',')} : {}),\n  });\n  return window.open(\n    URI.toString(authUrl),\n    `Log in with ${friendlyServiceName(service)}`,\n    Object.keys(windowOpts)\n      .map(k => `${k}=${windowOpts[k]}`)\n      .join(','),\n  );\n}\n\n// Cycles path through URL.origin to ensure that it's the same format we'll\n// see in the auth window's location\nfunction normalizeRedirectOrigin(origin: string): string {\n  return URI.parse(origin).origin;\n}\n\n// Cycles path through URL.pathname to ensure that it's the same format we'll\n// see in the auth window's location\nfunction normalizeRedirectPath(path: string): string {\n  return path === '/' ? '' : path;\n}\n\nconst loggedInQuery = `\nquery LoggedInQuery {\n  me {\n    serviceMetadata {\n      loggedInServices {\n        service\n        foreignUserId\n      }\n    }\n  }\n}\n`;\n\nconst allServicesQuery = `\nquery AllServicesQuery {\n  oneGraph {\n    services(filter: {supportsOauthLogin: true}) {\n      service\n      friendlyServiceName\n    }\n  }\n}\n`;\n\nfunction getServiceEnum(service: string): string {\n  return service.toUpperCase().replace(/-/, '_');\n}\n\nfunction fromServiceEnum(serviceEnum: string): string {\n  return serviceEnum.toLowerCase().replace(/_/, '-');\n}\n\nfunction getIsLoggedIn(\n  queryResult: Object,\n  service: string,\n  foreignUserId?: ?string,\n): boolean {\n  const serviceEnum = getServiceEnum(service);\n  const loggedInServices =\n    idx(queryResult, _ => _.data.me.serviceMetadata.loggedInServices) || [];\n  return !!loggedInServices.find(\n    serviceInfo =>\n      serviceInfo.service === serviceEnum &&\n      (!foreignUserId || foreignUserId === serviceInfo.foreignUserId),\n  );\n}\n\nfunction getServiceErrors(errors, service) {\n  return errors.filter(error => error.path && error.path.includes(service));\n}\n\nconst logoutMutation = `mutation SignOutServicesMutation(\n  $services: [OneGraphServiceEnum!]!\n) {\n  signoutServices(data: { services: $services }) {\n    me {\n      serviceMetadata {\n        loggedInServices {\n          service\n          foreignUserId\n        }\n      }\n    }\n  }\n}`;\n\nconst logoutUserMutation = `mutation SignOutServicesMutation(\n  $service: OneGraphServiceEnum!\n  $foreignUserId: String!\n) {\n  signoutServiceUser(\n    input: {\n      service: $service\n      foreignUserId: $foreignUserId\n    }\n  ) {\n    me {\n      serviceMetadata {\n        loggedInServices {\n          service\n          foreignUserId\n        }\n      }\n    }\n  }\n}`;\n\nfunction fetchQuery(\n  fetchUrl: string,\n  query: string,\n  variables: {[key: string]: any},\n  token?: ?Token,\n): Promise<Object> {\n  return fetch(fetchUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      ...(token ? {Authorization: `Bearer ${token.accessToken}`} : {}),\n    },\n    body: JSON.stringify({query, variables}),\n  }).then(response => response.json());\n}\n\nfunction exchangeCode(\n  oneGraphOrigin: string,\n  appId: string,\n  redirectOrigin: string,\n  redirectPath: string,\n  code: string,\n  token?: ?Token,\n): Promise<Object> {\n  const redirectUri = redirectOrigin + redirectPath;\n  const url = URI.make({\n    origin: oneGraphOrigin,\n    path: '/oauth/code',\n    query: {\n      app_id: appId,\n      redirect_uri: redirectUri,\n      code,\n    },\n  });\n  const headers = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    ...(token ? {Authorization: `Bearer ${token.accessToken}`} : {}),\n  };\n  return fetch(URI.toString(url), {\n    method: 'POST',\n    headers,\n  }).then(response => response.json());\n}\n\nfunction exchangeRefreshToken(\n  oneGraphOrigin: string,\n  appId: string,\n  refreshToken: string,\n): Promise<Object> {\n  const url = URI.make({\n    origin: oneGraphOrigin,\n    path: '/oauth/token',\n    query: {\n      app_id: appId,\n    },\n  });\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    accept: 'application/json',\n  };\n  return fetch(URI.toString(url), {\n    method: 'POST',\n    headers,\n    body: URI.queryToString({\n      grant_type: 'refresh_token',\n      refresh_token: refreshToken,\n    }),\n  }).then(response => response.json());\n}\n\nfunction byteArrayToString(byteArray) {\n  return byteArray.reduce(\n    (acc, byte) => acc + (byte & 0xff).toString(16).slice(-2),\n    '',\n  );\n}\n\nfunction makeStateParam(): StateParam {\n  return byteArrayToString(window.crypto.getRandomValues(new Uint8Array(32)));\n}\n\nfunction isExpired(token: Token): boolean {\n  return token.expireDate < Date.now();\n}\n\nfunction tokenFromStorage(storage: Storage, appId: string): ?Token {\n  const v = storage.getItem(appId);\n  if (v) {\n    const possibleToken = JSON.parse(v);\n    if (\n      typeof possibleToken.accessToken === 'string' &&\n      typeof possibleToken.expireDate === 'number' &&\n      !isExpired(possibleToken)\n    ) {\n      return possibleToken;\n    }\n  }\n  return null;\n}\n\nfunction findMissingAuthServices(results: any) {\n  /* Detect and normalize between:\n  1. The full graphql result\n  2. The `result.errors` of a graphql result\n  3. Apollo's GraphQL error structure\n   */\n  let errors =\n    results &&\n    // Full GraphQL result\n    (results.errors ||\n      // Apollo error\n      results.graphQLErrors ||\n      // Possibly result.errors\n      results);\n\n  // If errors aren't an array, bail\n  if (!Array.isArray(errors)) {\n    return [];\n  }\n\n  const missingServiceErrors = errors.filter(\n    error => idx(error, _ => _.extensions.type) === 'auth/missing-auth',\n  );\n\n  const missingServices = missingServiceErrors\n    .map(error => idx(error, _ => _.extensions.service))\n    .filter(Boolean);\n\n  return missingServices;\n}\n\nconst DEFAULT_ONEGRAPH_ORIGIN = 'https://serve.onegraph.com';\n\nclass OneGraphAuth {\n  _authWindows: {[service: Service]: Window} = {};\n  _intervalIds: {[service: Service]: IntervalID} = {};\n  _messageListeners: {[service: Service]: any} = {};\n  _fetchUrl: string;\n  _redirectOrigin: string;\n  _redirectPath: string;\n  _accessToken: ?Token = null;\n  oneGraphOrigin: string;\n  _redirectPath: string;\n  appId: string;\n  _storageKey: string;\n  _storage: Storage;\n  _communicationMode: CommunicationMode;\n  supportedServices = ALL_SERVICES;\n\n  constructor(opts: Opts) {\n    const {appId, oauthFinishOrigin, oauthFinishPath} = opts;\n    this.oneGraphOrigin = opts.oneGraphOrigin || DEFAULT_ONEGRAPH_ORIGIN;\n    this.appId = appId;\n    const windowUri = URI.parse(window.location.toString());\n    this._redirectOrigin = normalizeRedirectOrigin(\n      oauthFinishOrigin || windowUri.origin,\n    );\n    if (this._redirectOrigin !== windowUri.origin) {\n      console.warn('oauthFinishOrigin does not match window.location.origin');\n    }\n    this._redirectPath = normalizeRedirectPath(\n      oauthFinishPath || windowUri.path,\n    );\n\n    const fetchUrl = URI.make({\n      origin: opts.oneGraphOrigin || DEFAULT_ONEGRAPH_ORIGIN,\n      path: '/dynamic',\n      query: {app_id: appId},\n    });\n    this._fetchUrl = opts.graphqlUrl || URI.toString(fetchUrl);\n    this._storage =\n      opts.storage ||\n      (hasLocalStorage() ? new LocalStorage() : new InMemoryStorage());\n    this._storageKey = this.appId;\n    this._accessToken = tokenFromStorage(this._storage, this._storageKey);\n    this._communicationMode = opts.communicationMode || 'post_message';\n  }\n\n  _clearInterval = (service: Service) => {\n    clearInterval(this._intervalIds[service]);\n    delete this._intervalIds[service];\n  };\n\n  _clearMessageListener = (service: Service) => {\n    window.removeEventListener(\n      'message',\n      this._messageListeners[service],\n      false,\n    );\n    delete this._messageListeners[service];\n  };\n\n  _clearAuthWindow = (service: Service) => {\n    const w = this._authWindows[service];\n    w && w.close();\n    delete this._authWindows[service];\n  };\n\n  cleanup = (service: Service) => {\n    this._clearInterval(service);\n    this._clearMessageListener(service);\n    this._clearAuthWindow(service);\n  };\n\n  accessToken = (): ?Token => this._accessToken;\n\n  tokenExpireDate = (): ?Date => {\n    if (!this._accessToken) {\n      return null;\n    }\n    return new Date(this._accessToken.expireDate);\n  };\n\n  tokenExpiresSecondsFromNow = (): ?number => {\n    const expireDate = this.tokenExpireDate();\n    if (!expireDate) {\n      return null;\n    }\n    const seconds = expireDate - new Date();\n    if (seconds < 0) {\n      return null;\n    }\n    return Math.floor(seconds / 1000);\n  };\n\n  refreshToken = (refreshToken: string): Promise<?Token> => {\n    return exchangeRefreshToken(\n      this.oneGraphOrigin,\n      this.appId,\n      refreshToken,\n    ).then(response => {\n      if (!response) {\n        throw new OAuthError({\n          error: 'invalid_grant',\n          error_description: 'Invalid response refreshing token.',\n        });\n      }\n      if (response.error) {\n        throw new OAuthError({\n          error: response.error,\n          error_description: response.error_description,\n        });\n      }\n      if (\n        !response.access_token ||\n        !response.expires_in ||\n        !response.refresh_token\n      ) {\n        throw new OAuthError({\n          error: 'invalid_grant',\n          error_description:\n            'Inavlid response from server while refreshing token.',\n        });\n      } else {\n        const token: Token = {\n          accessToken: response.access_token,\n          expireDate: Date.now() + response.expires_in * 1000,\n          refreshToken: response.refresh_token,\n        };\n        this.setToken(token);\n        return token;\n      }\n    });\n  };\n\n  authHeaders = (): {Authorization?: string} => {\n    if (this._accessToken) {\n      return {Authorization: `Bearer ${this._accessToken.accessToken}`};\n    } else {\n      return {};\n    }\n  };\n\n  friendlyServiceName(service: Service): string {\n    return friendlyServiceName(service);\n  }\n\n  _makeAuthUrl = (service: Service): string => {\n    const authUrl = URI.make({\n      origin: this.oneGraphOrigin,\n      path: '/oauth/start',\n      query: {\n        service,\n        app_id: this.appId,\n        response_type: 'code',\n        redirect_origin: this._redirectOrigin,\n        redirect_path: this._redirectPath,\n        communication_mode: this._communicationMode,\n      },\n    });\n    return URI.toString(authUrl);\n  };\n\n  setToken = (token: Token) => {\n    this._accessToken = token;\n    const {refreshToken, ...storableToken} = token;\n    this._storage.setItem(this._storageKey, JSON.stringify(storableToken));\n  };\n\n  _waitForAuthFinishPostMessage = (\n    service: Service,\n    stateParam: StateParam,\n  ): Promise<AuthResponse> => {\n    const postMessageOrigin = normalizeRedirectOrigin(this.oneGraphOrigin);\n    return new Promise((resolve, reject) => {\n      const listener = event => {\n        if (normalizeRedirectOrigin(event.origin) !== postMessageOrigin) {\n          console.warn(\n            'ignoring event for origin',\n            event.origin,\n            'expected',\n            postMessageOrigin,\n          );\n        } else {\n          const message = JSON.parse(event.data);\n          if (message && message.version === 1) {\n            const {code, state} = message;\n            if (state !== stateParam) {\n              console.warn('Invalid state param, skipping');\n            } else {\n              if (!code) {\n                reject(\n                  new OAuthError({\n                    error: 'invalid_grant',\n                    error_description: 'Missing code',\n                  }),\n                );\n              } else {\n                exchangeCode(\n                  this.oneGraphOrigin,\n                  this.appId,\n                  this._redirectOrigin,\n                  this._redirectPath,\n                  code,\n                  this._accessToken,\n                )\n                  .then(response => {\n                    if (response.error) {\n                      reject(new OAuthError(response));\n                    } else if (\n                      typeof response.access_token === 'string' &&\n                      typeof response.expires_in === 'number'\n                    ) {\n                      const token: Token = {\n                        accessToken: response.access_token,\n                        expireDate: Date.now() + response.expires_in * 1000,\n                        refreshToken: response.refresh_token,\n                      };\n                      this.setToken(token);\n                      resolve({\n                        token,\n                        service: response.service,\n                        foreignUserId: response.foreign_user_id,\n                      });\n                    } else {\n                      reject(new Error('Unexpected result from server'));\n                    }\n                  })\n                  .catch(e => reject(e));\n              }\n            }\n          }\n        }\n      };\n      this._messageListeners[service] = listener;\n      window.addEventListener('message', listener, false);\n    });\n  };\n\n  _waitForAuthFinishRedirect = (\n    service: Service,\n    stateParam: StateParam,\n  ): Promise<AuthResponse> => {\n    return new Promise((resolve, reject) => {\n      this._intervalIds[service] = setInterval(() => {\n        try {\n          const authUri = URI.safeParse(\n            this._authWindows[service].location.toString(),\n          );\n          if (authUri && authUri.origin === this._redirectOrigin) {\n            const params = authUri.query;\n            if (stateParam !== params.state) {\n              reject(\n                new OAuthError({\n                  error: 'invalid_request',\n                  error_description: 'The state param does not match',\n                }),\n              );\n            } else {\n              const code = params.code;\n              if (!code) {\n                reject(\n                  new OAuthError({\n                    error: 'invalid_grant',\n                    error_description: 'Missing code',\n                  }),\n                );\n              } else {\n                exchangeCode(\n                  this.oneGraphOrigin,\n                  this.appId,\n                  this._redirectOrigin,\n                  this._redirectPath,\n                  code,\n                  this._accessToken,\n                )\n                  .then(response => {\n                    if (response.error) {\n                      reject(new OAuthError(response));\n                    } else if (\n                      typeof response.access_token === 'string' &&\n                      typeof response.expires_in === 'number'\n                    ) {\n                      const token: Token = {\n                        accessToken: response.access_token,\n                        expireDate: Date.now() + response.expires_in * 1000,\n                        refreshToken: response.refresh_token,\n                      };\n                      this.setToken(token);\n                      resolve({token});\n                    } else {\n                      reject(new Error('Unexpected result from server'));\n                    }\n                  })\n                  .catch(e => reject(e));\n              }\n            }\n          }\n        } catch (e) {\n          if (e instanceof window.DOMException) {\n            // do nothing--probably on the service's or onegraph's domain\n          } else {\n            console.error(\n              'unexpected error waiting for auth to finish for ' + service,\n              e,\n            );\n            reject(e);\n          }\n        }\n      }, POLL_INTERVAL);\n    });\n  };\n\n  login = (service: Service, scopes: ?Array<string>): Promise<AuthResponse> => {\n    if (!service) {\n      throw new Error(\n        \"Missing required argument. Provide service as first argument to login (e.g. `auth.login('stripe')`).\",\n      );\n    }\n    this.cleanup(service);\n    const stateParam = makeStateParam();\n    this._authWindows[service] = createAuthWindow(\n      this._makeAuthUrl(service),\n      service,\n      stateParam,\n      scopes,\n    );\n    const authFinish =\n      this._communicationMode === 'redirect'\n        ? this._waitForAuthFinishRedirect\n        : this._waitForAuthFinishPostMessage;\n    return authFinish(service, stateParam)\n      .then(result => {\n        this.cleanup(service);\n        return result;\n      })\n      .catch(e => {\n        this.cleanup(service);\n        throw e;\n      });\n  };\n\n  isLoggedIn = (\n    args: Service | {service: string, foreignUserId?: ?string},\n  ): Promise<boolean> => {\n    const accessToken = this._accessToken;\n    if (accessToken) {\n      const service = typeof args === 'string' ? args : args.service;\n      if (!service) {\n        throw new Error(\n          \"Missing required argument. Provide service as first argument to isLoggedIn (e.g. `auth.isLoggedIn('stripe')`).\",\n        );\n      }\n      const foreignUserId =\n        typeof args === 'string' ? null : args.foreignUserId;\n      return fetchQuery(this._fetchUrl, loggedInQuery, {}, accessToken).then(\n        result => getIsLoggedIn(result, service, foreignUserId),\n      );\n    } else {\n      return Promise.resolve(false);\n    }\n  };\n\n  servicesStatus = (): Promise<ServicesStatus> => {\n    const accessToken = this._accessToken;\n    if (accessToken) {\n      return fetchQuery(this._fetchUrl, loggedInQuery, {}, accessToken).then(\n        result =>\n          ALL_SERVICES.reduce((acc, service) => {\n            acc[service] = {isLoggedIn: getIsLoggedIn(result, service)};\n            return acc;\n          }, {}),\n      );\n    } else {\n      return Promise.resolve(\n        ALL_SERVICES.reduce((acc, service) => {\n          acc[service] = {isLoggedIn: false};\n          return acc;\n        }, {}),\n      );\n    }\n  };\n\n  allServices = (): Promise<ServicesList> => {\n    return fetchQuery(this._fetchUrl, allServicesQuery, {}, null).then(\n      result => {\n        return result.data.oneGraph.services.map(serviceInfo => ({\n          serviceEnum: serviceInfo.service,\n          service: fromServiceEnum(serviceInfo.service),\n          friendlyServiceName: serviceInfo.friendlyServiceName,\n        }));\n      },\n    );\n  };\n\n  loggedInServices = (): Promise<LoggedInServices> => {\n    const accessToken = this._accessToken;\n    if (accessToken) {\n      return fetchQuery(this._fetchUrl, loggedInQuery, {}, accessToken).then(\n        result => {\n          const loggedInServices =\n            idx(result, _ => _.data.me.serviceMetadata.loggedInServices) || [];\n          return loggedInServices.reduce((acc, serviceInfo) => {\n            const serviceKey = fromServiceEnum(serviceInfo.service);\n            const loggedInInfo = acc[serviceKey] || {\n              serviceEnum: serviceInfo.service,\n              foreignUserIds: [],\n            };\n            acc[serviceKey] = {\n              ...loggedInInfo,\n              foreignUserIds: [\n                serviceInfo.foreignUserId,\n                ...loggedInInfo.foreignUserIds,\n              ],\n            };\n            return acc;\n          }, {});\n        },\n      );\n    } else {\n      return Promise.resolve({});\n    }\n  };\n\n  logout = (\n    service: Service,\n    foreignUserId?: ?string,\n  ): Promise<LogoutResult> => {\n    if (!service) {\n      throw new Error(\n        \"Missing required argument. Provide service as first argument to logout (e.g. `auth.logout('stripe')`).\",\n      );\n    }\n    this.cleanup(service);\n    const accessToken = this._accessToken;\n    if (accessToken) {\n      const serviceEnum = getServiceEnum(service);\n\n      const signoutPromise = foreignUserId\n        ? fetchQuery(\n            this._fetchUrl,\n            logoutUserMutation,\n            {\n              service: serviceEnum,\n              foreignUserId: foreignUserId,\n            },\n            accessToken,\n          )\n        : fetchQuery(\n            this._fetchUrl,\n            logoutMutation,\n            {\n              services: [serviceEnum],\n            },\n            accessToken,\n          );\n      return signoutPromise.then(result => {\n        if (\n          result.errors &&\n          result.errors.length &&\n          getServiceErrors(result.errors).length\n        ) {\n          return {result: 'failure', errors: result.errors};\n        } else {\n          const loggedIn = getIsLoggedIn(\n            {data: result.signoutServices},\n            service,\n            foreignUserId,\n          );\n          return {result: loggedIn ? 'failure' : 'success'};\n        }\n      });\n    } else {\n      return Promise.resolve({result: 'failure'});\n    }\n  };\n\n  destroy = () => {\n    Object.keys(this._intervalIds).forEach(key => this.cleanup(key));\n    Object.keys(this._authWindows).forEach(key => this.cleanup(key));\n    this._storage.removeItem(this._storageKey);\n    this._accessToken = null;\n  };\n\n  findMissingAuthServices = findMissingAuthServices;\n}\n\nexport default OneGraphAuth;\n"],"names":["OAuthError","errorObject","fileName","lineNumber","message","error","error_description","instance","Error","oauthError","setPrototypeOf","Object","getPrototypeOf","captureStackTrace","prototype","create","__proto__","InMemoryStorage","state","getItem","key","setItem","value","removeItem","OG_PREFIX","LocalStorage","localStorage","DEBUG_KEY","hasLocalStorage","e","DOMException","code","name","length","URI_REGEX","RegExp","join","parseQuery","queryString","split","reduce","query","part","param","parse","uriString","match","safeParse","addQueryParams","uri","setPath","path","queryToString","keys","map","k","toString","origin","make","POLL_INTERVAL","ALL_SERVICES","friendlyServiceName","service","getWindowOpts","windowWidth","Math","min","floor","window","outerWidth","windowHeight","outerHeight","windowArea","round","screenX","screenY","width","height","left","top","createAuthWindow","authUrlString","stateParam","scopes","windowOpts","authUrl","URI","open","normalizeRedirectOrigin","normalizeRedirectPath","loggedInQuery","allServicesQuery","getServiceEnum","toUpperCase","replace","fromServiceEnum","serviceEnum","toLowerCase","getIsLoggedIn","queryResult","foreignUserId","loggedInServices","data","me","serviceMetadata","find","serviceInfo","getServiceErrors","errors","filter","includes","logoutMutation","logoutUserMutation","fetchQuery","fetchUrl","variables","token","fetch","Authorization","accessToken","JSON","stringify","then","response","json","exchangeCode","oneGraphOrigin","appId","redirectOrigin","redirectPath","redirectUri","url","headers","exchangeRefreshToken","refreshToken","byteArrayToString","byteArray","acc","byte","slice","makeStateParam","crypto","getRandomValues","Uint8Array","isExpired","expireDate","Date","now","tokenFromStorage","storage","v","possibleToken","findMissingAuthServices","results","graphQLErrors","Array","isArray","missingServiceErrors","extensions","type","missingServices","Boolean","DEFAULT_ONEGRAPH_ORIGIN","OneGraphAuth","opts","_authWindows","_intervalIds","_messageListeners","_accessToken","supportedServices","_clearInterval","_clearMessageListener","removeEventListener","_clearAuthWindow","w","close","cleanup","tokenExpireDate","tokenExpiresSecondsFromNow","seconds","access_token","expires_in","refresh_token","setToken","authHeaders","_makeAuthUrl","_redirectOrigin","_redirectPath","_communicationMode","storableToken","_storage","_storageKey","_waitForAuthFinishPostMessage","postMessageOrigin","Promise","resolve","reject","listener","event","warn","version","foreign_user_id","catch","addEventListener","_waitForAuthFinishRedirect","setInterval","authUri","location","params","login","authFinish","result","isLoggedIn","args","_fetchUrl","servicesStatus","allServices","oneGraph","services","serviceKey","loggedInInfo","foreignUserIds","logout","signoutPromise","loggedIn","signoutServices","destroy","forEach","oauthFinishOrigin","oauthFinishPath","windowUri","app_id","graphqlUrl","communicationMode"],"mappings":"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"}