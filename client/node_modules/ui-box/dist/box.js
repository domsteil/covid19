"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const prop_types_1 = __importDefault(require("prop-types"));
const enhancers_1 = require("./enhancers");
const enhance_props_1 = __importDefault(require("./enhance-props"));
const safeHref_1 = require("./utils/safeHref");
const Box = (_a) => {
    var { is = 'div', innerRef, children, allowUnsafeHref } = _a, props = __rest(_a, ["is", "innerRef", "children", "allowUnsafeHref"]);
    // Convert the CSS props to class names (and inject the styles)
    const { className, enhancedProps: parsedProps } = enhance_props_1.default(props);
    parsedProps.className = className;
    if (innerRef) {
        parsedProps.ref = innerRef;
    }
    /**
     * If the user has enabled safe hrefs we want to make sure that the url passed
     * uses a safe protocol and that the other attributes that make the link safe are
     * added to the element
     */
    const safeHrefEnabled = (typeof allowUnsafeHref === 'boolean' ? !allowUnsafeHref : safeHref_1.getUseSafeHref()) && is === 'a' && parsedProps.href;
    if (safeHrefEnabled) {
        const { safeHref, safeRel } = safeHref_1.extractAnchorProps(parsedProps.href, parsedProps.rel);
        parsedProps.href = safeHref;
        parsedProps.rel = safeRel;
    }
    return react_1.default.createElement(is, parsedProps, children);
};
Box.displayName = 'Box';
Box.propTypes = Object.assign({}, enhancers_1.propTypes, { innerRef: prop_types_1.default.oneOfType([
        prop_types_1.default.func,
        prop_types_1.default.shape({ current: prop_types_1.default.element })
    ]), is: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.func, prop_types_1.default.elementType]) });
Box.defaultProps = {
    innerRef: null,
    is: 'div',
    boxSizing: 'border-box'
};
exports.default = Box;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm94LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2JveC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQSxrREFBeUI7QUFDekIsNERBQWtDO0FBRWxDLDJDQUFxQztBQUNyQyxvRUFBMEM7QUFDMUMsK0NBQW1FO0FBRW5FLE1BQU0sR0FBRyxHQUFpQixDQUFDLEVBQTZELEVBQUUsRUFBRTtRQUFqRSxFQUFFLEVBQUUsR0FBRyxLQUFLLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxlQUFlLE9BQVksRUFBVixxRUFBUTtJQUNwRiwrREFBK0Q7SUFDL0QsTUFBTSxFQUFDLFNBQVMsRUFBRSxhQUFhLEVBQUUsV0FBVyxFQUFDLEdBQUcsdUJBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQUVuRSxXQUFXLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQTtJQUVqQyxJQUFJLFFBQVEsRUFBRTtRQUNaLFdBQVcsQ0FBQyxHQUFHLEdBQUcsUUFBUSxDQUFBO0tBQzNCO0lBRUQ7Ozs7T0FJRztJQUNILE1BQU0sZUFBZSxHQUFHLENBQUMsT0FBTyxlQUFlLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMseUJBQWMsRUFBRSxDQUFDLElBQUksRUFBRSxLQUFLLEdBQUcsSUFBSSxXQUFXLENBQUMsSUFBSSxDQUFBO0lBQ3RJLElBQUksZUFBZSxFQUFFO1FBQ25CLE1BQU0sRUFBQyxRQUFRLEVBQUUsT0FBTyxFQUFDLEdBQUcsNkJBQWtCLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUE7UUFDakYsV0FBVyxDQUFDLElBQUksR0FBRyxRQUFRLENBQUE7UUFDM0IsV0FBVyxDQUFDLEdBQUcsR0FBRyxPQUFPLENBQUE7S0FDMUI7SUFFRCxPQUFPLGVBQUssQ0FBQyxhQUFhLENBQUMsRUFBRSxFQUFFLFdBQVcsRUFBRSxRQUFRLENBQUMsQ0FBQTtBQUN2RCxDQUFDLENBQUE7QUFFRCxHQUFHLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQTtBQUV2QixHQUFHLENBQUMsU0FBUyxxQkFDUixxQkFBUyxJQUNaLFFBQVEsRUFBRSxvQkFBUyxDQUFDLFNBQVMsQ0FBQztRQUM1QixvQkFBUyxDQUFDLElBQUk7UUFDZCxvQkFBUyxDQUFDLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxvQkFBUyxDQUFDLE9BQU8sRUFBRSxDQUFDO0tBQ2hELENBQUMsRUFDRixFQUFFLEVBQUUsb0JBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxvQkFBUyxDQUFDLE1BQU0sRUFBRSxvQkFBUyxDQUFDLElBQUksRUFBRSxvQkFBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDLEdBQ25GLENBQUE7QUFFRCxHQUFHLENBQUMsWUFBWSxHQUFHO0lBQ2pCLFFBQVEsRUFBRSxJQUFJO0lBQ2QsRUFBRSxFQUFFLEtBQUs7SUFDVCxTQUFTLEVBQUUsWUFBWTtDQUN4QixDQUFBO0FBRUQsa0JBQWUsR0FBRyxDQUFBIn0=