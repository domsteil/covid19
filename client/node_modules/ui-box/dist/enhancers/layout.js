"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const prop_types_1 = __importDefault(require("prop-types"));
const get_css_1 = __importDefault(require("../get-css"));
const get_class_name_1 = require("../get-class-name");
exports.propTypes = {
    boxSizing: prop_types_1.default.string,
    clear: prop_types_1.default.string,
    clearfix: prop_types_1.default.bool,
    display: prop_types_1.default.string,
    float: prop_types_1.default.string,
    zIndex: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number])
};
exports.propAliases = {};
exports.propValidators = {};
const display = {
    className: 'dspl',
    cssName: 'display',
    jsName: 'display',
    safeValue: true,
    isPrefixed: true
};
const float = {
    className: 'flt',
    cssName: 'float',
    jsName: 'float',
    safeValue: true
};
const clear = {
    className: 'clr',
    cssName: 'clear',
    jsName: 'clear',
    safeValue: true
};
const zIndex = {
    className: 'z-idx',
    cssName: 'z-index',
    jsName: 'zIndex',
    safeValue: true,
    defaultUnit: ''
};
const boxSizing = {
    className: 'box-szg',
    cssName: 'box-sizing',
    jsName: 'boxSizing',
    safeValue: true
};
exports.propEnhancers = {
    boxSizing: (value) => get_css_1.default(boxSizing, value),
    clear: (value) => get_css_1.default(clear, value),
    clearfix: () => ({
        className: `${get_class_name_1.getClassNamePrefix()}clearfix`,
        styles: `
.${get_class_name_1.getClassNamePrefix()}clearfix:before, .${get_class_name_1.getClassNamePrefix()}clearfix:after {
  display: table;
  clear: both;
  content: "";
}`
    }),
    display: (value) => get_css_1.default(display, value),
    float: (value) => get_css_1.default(float, value),
    zIndex: (value) => get_css_1.default(zIndex, value)
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2VuaGFuY2Vycy9sYXlvdXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSw0REFBa0M7QUFDbEMseURBQStCO0FBQy9CLHNEQUFzRDtBQUd6QyxRQUFBLFNBQVMsR0FBcUI7SUFDekMsU0FBUyxFQUFFLG9CQUFTLENBQUMsTUFBTTtJQUMzQixLQUFLLEVBQUUsb0JBQVMsQ0FBQyxNQUFNO0lBQ3ZCLFFBQVEsRUFBRSxvQkFBUyxDQUFDLElBQUk7SUFDeEIsT0FBTyxFQUFFLG9CQUFTLENBQUMsTUFBTTtJQUN6QixLQUFLLEVBQUUsb0JBQVMsQ0FBQyxNQUFNO0lBQ3ZCLE1BQU0sRUFBRSxvQkFBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDLG9CQUFTLENBQUMsTUFBTSxFQUFFLG9CQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7Q0FDbEUsQ0FBQTtBQUVZLFFBQUEsV0FBVyxHQUFnQixFQUFFLENBQUE7QUFDN0IsUUFBQSxjQUFjLEdBQW1CLEVBQUUsQ0FBQTtBQUVoRCxNQUFNLE9BQU8sR0FBRztJQUNkLFNBQVMsRUFBRSxNQUFNO0lBQ2pCLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLE1BQU0sRUFBRSxTQUFTO0lBQ2pCLFNBQVMsRUFBRSxJQUFJO0lBQ2YsVUFBVSxFQUFFLElBQUk7Q0FDakIsQ0FBQTtBQUNELE1BQU0sS0FBSyxHQUFHO0lBQ1osU0FBUyxFQUFFLEtBQUs7SUFDaEIsT0FBTyxFQUFFLE9BQU87SUFDaEIsTUFBTSxFQUFFLE9BQU87SUFDZixTQUFTLEVBQUUsSUFBSTtDQUNoQixDQUFBO0FBQ0QsTUFBTSxLQUFLLEdBQUc7SUFDWixTQUFTLEVBQUUsS0FBSztJQUNoQixPQUFPLEVBQUUsT0FBTztJQUNoQixNQUFNLEVBQUUsT0FBTztJQUNmLFNBQVMsRUFBRSxJQUFJO0NBQ2hCLENBQUE7QUFDRCxNQUFNLE1BQU0sR0FBRztJQUNiLFNBQVMsRUFBRSxPQUFPO0lBQ2xCLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLFNBQVMsRUFBRSxJQUFJO0lBQ2YsV0FBVyxFQUFFLEVBQUU7Q0FDaEIsQ0FBQTtBQUNELE1BQU0sU0FBUyxHQUFHO0lBQ2hCLFNBQVMsRUFBRSxTQUFTO0lBQ3BCLE9BQU8sRUFBRSxZQUFZO0lBQ3JCLE1BQU0sRUFBRSxXQUFXO0lBQ25CLFNBQVMsRUFBRSxJQUFJO0NBQ2hCLENBQUE7QUFFWSxRQUFBLGFBQWEsR0FBa0I7SUFDMUMsU0FBUyxFQUFFLENBQUMsS0FBNEIsRUFBRSxFQUFFLENBQUMsaUJBQU0sQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDO0lBQ3JFLEtBQUssRUFBRSxDQUFDLEtBQTRCLEVBQUUsRUFBRSxDQUFDLGlCQUFNLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQztJQUM3RCxRQUFRLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztRQUNmLFNBQVMsRUFBRSxHQUFHLG1DQUFrQixFQUFFLFVBQVU7UUFDNUMsTUFBTSxFQUFFO0dBQ1QsbUNBQWtCLEVBQUUscUJBQXFCLG1DQUFrQixFQUFFOzs7O0VBSTlEO0tBQ0MsQ0FBQztJQUNGLE9BQU8sRUFBRSxDQUFDLEtBQTRCLEVBQUUsRUFBRSxDQUFDLGlCQUFNLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQztJQUNqRSxLQUFLLEVBQUUsQ0FBQyxLQUE0QixFQUFFLEVBQUUsQ0FBQyxpQkFBTSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUM7SUFDN0QsTUFBTSxFQUFFLENBQUMsS0FBNEIsRUFBRSxFQUFFLENBQUMsaUJBQU0sQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDO0NBQ2hFLENBQUEifQ==