"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const PROTOCOL_REGEX = /^[a-z]+:/;
const ORIGIN_REGEX = /^(?:[a-z]+:?:)?(?:\/\/)?([^\/\?]+)/;
let useSafeHref = false;
let globalOrigin = typeof window !== 'undefined' ? window.location.origin : false;
function configureSafeHref(configObject) {
    if (typeof configObject.enabled !== 'undefined') {
        useSafeHref = configObject.enabled;
    }
    if (configObject.origin) {
        globalOrigin = configObject.origin;
    }
}
exports.configureSafeHref = configureSafeHref;
function getUseSafeHref() {
    return useSafeHref;
}
exports.getUseSafeHref = getUseSafeHref;
function getURLInfo(url) {
    /**
     * An array of the safely allowed url protocols
     */
    const safeProtocols = ['http:', 'https:', 'mailto:', 'tel:', 'data:'];
    /**
     * - Find protocol of URL or set to 'relative'
     * - Find origin of URL
     * - Determine if sameOrigin
     * - Determine if protocol of URL is safe
     */
    const protocolResult = url.match(PROTOCOL_REGEX);
    const originResult = url.match(ORIGIN_REGEX);
    const urlProtocol = protocolResult ? protocolResult[0] : 'relative';
    let sameOrigin = urlProtocol === 'relative';
    if (!sameOrigin && globalOrigin) {
        sameOrigin = globalOrigin === (originResult && originResult[0]);
    }
    const isSafeProtocol = sameOrigin ? true : safeProtocols.includes(urlProtocol);
    if (!isSafeProtocol) {
        /**
         * If the url is unsafe, put a error in the console, and return the URLInfo object
         * with the value of url being `undefined`
         */
        console.error('ðŸ“¦ `href` passed to anchor tag is unsafe. Because of this, the `href` on the element was not set. Please review the safe href documentation if you have questions.', 'https://www.github.com/segmentio/ui-box');
        return {
            url: undefined,
            sameOrigin
        };
    }
    /**
     * If the url is safe, return the url and origin
     */
    return {
        url,
        sameOrigin
    };
}
exports.getURLInfo = getURLInfo;
function extractAnchorProps(href, rel) {
    /**
    * Get url info and update href
    */
    const urlInfo = getURLInfo(href);
    const safeHref = urlInfo.url;
    /**
     * If the url passed is safe, we want to also update the attributes of the element
     * to be safe
     */
    let safeRel = rel ? rel : '';
    if (urlInfo.url) {
        if (!safeRel.includes('noopener')) {
            safeRel += `${safeRel.length > 0 ? ' ' : ''}noopener`;
        }
        if (!safeRel.includes('noreferrer') && !urlInfo.sameOrigin) {
            safeRel += `${safeRel.length > 0 ? ' ' : ''}noreferrer`;
        }
    }
    return {
        safeHref,
        safeRel
    };
}
exports.extractAnchorProps = extractAnchorProps;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FmZUhyZWYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMvc2FmZUhyZWYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFVQSxNQUFNLGNBQWMsR0FBRyxVQUFVLENBQUE7QUFDakMsTUFBTSxZQUFZLEdBQUcsb0NBQW9DLENBQUE7QUFDekQsSUFBSSxXQUFXLEdBQUcsS0FBSyxDQUFBO0FBQ3ZCLElBQUksWUFBWSxHQUFHLE9BQU8sTUFBTSxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQTtBQUVqRixTQUFnQixpQkFBaUIsQ0FBQyxZQUErQjtJQUM3RCxJQUFJLE9BQU8sWUFBWSxDQUFDLE9BQU8sS0FBSyxXQUFXLEVBQUU7UUFDN0MsV0FBVyxHQUFHLFlBQVksQ0FBQyxPQUFPLENBQUE7S0FDckM7SUFFRCxJQUFJLFlBQVksQ0FBQyxNQUFNLEVBQUU7UUFDckIsWUFBWSxHQUFHLFlBQVksQ0FBQyxNQUFNLENBQUE7S0FDckM7QUFDTCxDQUFDO0FBUkQsOENBUUM7QUFFRCxTQUFnQixjQUFjO0lBQzFCLE9BQU8sV0FBVyxDQUFBO0FBQ3RCLENBQUM7QUFGRCx3Q0FFQztBQUVELFNBQWdCLFVBQVUsQ0FBQyxHQUFXO0lBQ2xDOztPQUVHO0lBQ0gsTUFBTSxhQUFhLEdBQUcsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUE7SUFFckU7Ozs7O09BS0c7SUFDSCxNQUFNLGNBQWMsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUFBO0lBQ2hELE1BQU0sWUFBWSxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLENBQUE7SUFDNUMsTUFBTSxXQUFXLEdBQUcsY0FBYyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQTtJQUNuRSxJQUFJLFVBQVUsR0FBRyxXQUFXLEtBQUssVUFBVSxDQUFBO0lBQzNDLElBQUksQ0FBQyxVQUFVLElBQUksWUFBWSxFQUFFO1FBQzdCLFVBQVUsR0FBRyxZQUFZLEtBQUssQ0FBQyxZQUFZLElBQUksWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7S0FDbEU7SUFFRCxNQUFNLGNBQWMsR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQTtJQUM5RSxJQUFJLENBQUMsY0FBYyxFQUFFO1FBQ2pCOzs7V0FHRztRQUNILE9BQU8sQ0FBQyxLQUFLLENBQ1Qsb0tBQW9LLEVBQ3BLLHlDQUF5QyxDQUM1QyxDQUFBO1FBQ0QsT0FBTztZQUNILEdBQUcsRUFBRSxTQUFTO1lBQ2QsVUFBVTtTQUNiLENBQUE7S0FDSjtJQUVEOztPQUVHO0lBQ0gsT0FBTztRQUNILEdBQUc7UUFDSCxVQUFVO0tBQ2IsQ0FBQTtBQUNMLENBQUM7QUEzQ0QsZ0NBMkNDO0FBRUQsU0FBZ0Isa0JBQWtCLENBQUMsSUFBWSxFQUFFLEdBQVc7SUFDdkQ7O01BRUU7SUFDSCxNQUFNLE9BQU8sR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDaEMsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQTtJQUU1Qjs7O09BR0c7SUFFSCxJQUFJLE9BQU8sR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFBO0lBQzVCLElBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtRQUNmLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxFQUFFO1lBQ2pDLE9BQU8sSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsVUFBVSxDQUFBO1NBQ3REO1FBRUQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFO1lBQzFELE9BQU8sSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsWUFBWSxDQUFBO1NBQ3hEO0tBQ0Y7SUFFRCxPQUFPO1FBQ0gsUUFBUTtRQUNSLE9BQU87S0FDVixDQUFBO0FBQ0wsQ0FBQztBQTNCRCxnREEyQkMifQ==